<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.mapper.PositionMapper">
  <resultMap id="BaseResultMap" type="com.example.entity.Position">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="position_name" jdbcType="VARCHAR" property="positionName" />
    <result column="position_level" jdbcType="VARCHAR" property="positionLevel" />
    <result column="position_salary" jdbcType="DECIMAL" property="positionSalary" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="department_id" jdbcType="INTEGER" property="departmentId" />
  </resultMap>
  <sql id="Base_Column_List">
    id, position_name, position_level, position_salary, create_time, update_time, department_id
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from position
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from position
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.example.entity.Position">
    insert into position (id, position_name, position_level, 
      position_salary, create_time, update_time, 
      department_id)
    values (#{id,jdbcType=INTEGER}, #{positionName,jdbcType=VARCHAR}, #{positionLevel,jdbcType=VARCHAR}, 
      #{positionSalary,jdbcType=DECIMAL}, #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}, 
      #{departmentId,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.example.entity.Position">
    insert into position
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="positionName != null">
        position_name,
      </if>
      <if test="positionLevel != null">
        position_level,
      </if>
      <if test="positionSalary != null">
        position_salary,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="departmentId != null">
        department_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="positionName != null">
        #{positionName,jdbcType=VARCHAR},
      </if>
      <if test="positionLevel != null">
        #{positionLevel,jdbcType=VARCHAR},
      </if>
      <if test="positionSalary != null">
        #{positionSalary,jdbcType=DECIMAL},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="departmentId != null">
        #{departmentId,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.example.entity.Position">
    update position
    <set>
      <if test="positionName != null">
        position_name = #{positionName,jdbcType=VARCHAR},
      </if>
      <if test="positionLevel != null">
        position_level = #{positionLevel,jdbcType=VARCHAR},
      </if>
      <if test="positionSalary != null">
        position_salary = #{positionSalary,jdbcType=DECIMAL},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="departmentId != null">
        department_id = #{departmentId,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.example.entity.Position">
    update position
    set position_name = #{positionName,jdbcType=VARCHAR},
      position_level = #{positionLevel,jdbcType=VARCHAR},
      position_salary = #{positionSalary,jdbcType=DECIMAL},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      department_id = #{departmentId,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
  
  <select id="listByDepartmentId" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from position
    where department_id = #{departmentId,jdbcType=INTEGER}
  </select>
</mapper>