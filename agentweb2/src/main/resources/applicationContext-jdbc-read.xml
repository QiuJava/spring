<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:p="http://www.springframework.org/schema/p"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="
    http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
    http://www.springframework.org/schema/tx  http://www.springframework.org/schema/tx/spring-tx.xsd
    http://www.springframework.org/schema/aop  http://www.springframework.org/schema/aop/spring-aop.xsd
    ">

	<bean id="readDataSource" class="com.alibaba.druid.pool.DruidDataSource"
		init-method="init" destroy-method="close">
		<property name="url" value="${posp.read.url}" />
		<property name="username" value="${posp.read.userName}" />
		<property name="password" value="${posp.read.password}" />

		<property name="filters" value="stat" />
		<property name="maxActive" value="${posp.read.maxActive}" />
		<property name="initialSize" value="${posp.read.initialSize}" />
		<property name="maxWait" value="${posp.read.maxWait}" />
		<property name="minIdle" value="${posp.read.minIdle}" />

		<property name="timeBetweenEvictionRunsMillis" value="3000" />
		<property name="minEvictableIdleTimeMillis" value="300000" />

		<property name="validationQuery" value="SELECT 'x'" />
		<property name="testWhileIdle" value="true" />
		<property name="testOnBorrow" value="false" />
		<property name="testOnReturn" value="false" />

		<property name="poolPreparedStatements" value="true" />
		<property name="maxPoolPreparedStatementPerConnectionSize" value="20" />
		<!-- 超过时间限制是否回收 -->
		<!--<property name="removeAbandoned" value="true" />-->
		<!--&lt;!&ndash; 超时时间；单位为秒。180秒=3分钟 &ndash;&gt;-->
		<!--<property name="removeAbandonedTimeout" value="180" />-->
		<!--&lt;!&ndash; 关闭abanded连接时输出错误日志 &ndash;&gt;-->
		<!--<property name="logAbandoned" value="true" />-->
	</bean>

	<bean id="readSqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean"
		p:dataSource-ref="readDataSource"
		p:configLocation="classpath:mybatis-config.xml"
		p:mapperLocations="classpath:mapper/*.xml"/>

	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer"
		p:basePackage="cn.eeepay.framework.dao"
		p:annotationClass="cn.eeepay.framework.util.ReadOnlyDataSource"
		p:sqlSessionFactoryBeanName="readSqlSessionFactory"/>

	<bean id="readTransactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager"
		p:dataSource-ref="readDataSource" />

    <tx:advice id="readAdvice" transaction-manager="readTransactionManager">
        <tx:attributes>
			<tx:method name="insert*" propagation="REQUIRED" rollback-for="java.lang.Throwable" />
			<tx:method name="update*" propagation="REQUIRED" rollback-for="java.lang.Throwable" />
			<tx:method name="delete*" propagation="REQUIRED" rollback-for="java.lang.Throwable" />
			<tx:method name="save*" propagation="REQUIRED" rollback-for="java.lang.Throwable" />
			<tx:method name="batch*" propagation="REQUIRED" rollback-for="java.lang.Throwable" />
			<tx:method name="add*" propagation="REQUIRED" rollback-for="java.lang.Throwable" />
			<tx:method name="select*" propagation="SUPPORTS" read-only="true" />
			<tx:method name="query*" propagation="SUPPORTS" read-only="true" />
			<tx:method name="get*" propagation="SUPPORTS" read-only="true" />
			<tx:method name="export*" propagation="SUPPORTS" read-only="true" />
			<tx:method name="count*" propagation="SUPPORTS" read-only="true" />
			<tx:method name="list*" propagation="SUPPORTS" read-only="true" />
			<tx:method name="find*" propagation="SUPPORTS" read-only="true" />
			<tx:method name="*Export" propagation="SUPPORTS" read-only="true" />
			<tx:method name="*Query" propagation="SUPPORTS" read-only="true" />
			<tx:method name="*Count" propagation="SUPPORTS" read-only="true" />
			<tx:method name="*" propagation="REQUIRED" rollback-for="java.lang.Throwable"/>
        </tx:attributes>
    </tx:advice>

    <tx:annotation-driven transaction-manager="readTransactionManager" />

    <aop:config>
        <aop:pointcut id="serviceReadMethods"
                      expression="execution(* cn.eeepay.framework.service.impl..*(..))" />
        <aop:advisor advice-ref="readAdvice" pointcut-ref="serviceReadMethods" />
    </aop:config>
</beans>
