<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cn.eeepay.framework.dao.BusinessProductDefineDao" >
  <resultMap id="BaseResultMap" type="cn.eeepay.framework.model.BusinessProductDefine" >
    <result column="bp_id" property="bpId" jdbcType="VARCHAR" />
    <result column="bp_name" property="bpName" jdbcType="VARCHAR" />
    <result column="sale_starttime" property="saleStarttime" jdbcType="DATE" />
    <result column="sale_endtime" property="saleEndtime" jdbcType="DATE" />
    <result column="proxy" property="proxy" jdbcType="VARCHAR" />
    <result column="bp_type" property="bpType" jdbcType="VARCHAR" />
    <result column="is_oem" property="isOem" jdbcType="VARCHAR" />
    <result column="bp_name_2" property="ownBpName" jdbcType="VARCHAR" />
    <result column="own_bp_id" property="ownBpId" jdbcType="VARCHAR" />
    <result column="two_code" property="twoCode" jdbcType="VARCHAR" />
    <result column="remark" property="remark" jdbcType="VARCHAR" />
    <result column="bp_img" property="bpImg" jdbcType="VARCHAR" />
    <result column="not_check" property="notCheck" jdbcType="VARCHAR" />
    <result column="team_name" property="teamName" jdbcType="VARCHAR" />
  </resultMap>
  
  <resultMap id="SelectByParam" type="cn.eeepay.framework.model.BusinessProductDefine">
  	<result column="bp_name" property="bpName" jdbcType="VARCHAR" />
  	<result column="is_oem" property="isOem" jdbcType="VARCHAR" />
  	<result column="bp_type" property="bpType" jdbcType="VARCHAR" />
  	<result column="team_name" property="teamName" jdbcType="VARCHAR" />
  </resultMap>
  
  <!-- <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, bp_id, bp_name, sale_starttime, sale_endtime, proxy, bp_type, is_oem, oem_id, 
    own_bp_id, two_code, remark
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="cn.eeepay.framework.model.BusinessProductDefineExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from business_product_define
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from business_product_define
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from business_product_define
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="cn.eeepay.framework.model.BusinessProductDefineExample" >
    delete from business_product_define
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="cn.eeepay.framework.model.BusinessProductDefine" >
    insert into business_product_define (id, bp_id, bp_name, 
      sale_starttime, sale_endtime, proxy, 
      bp_type, is_oem, oem_id, 
      own_bp_id, two_code, remark
      )
    values (#{id,jdbcType=BIGINT}, #{bpId,jdbcType=VARCHAR}, #{bpName,jdbcType=VARCHAR}, 
      #{saleStarttime,jdbcType=DATE}, #{saleEndtime,jdbcType=DATE}, #{proxy,jdbcType=VARCHAR}, 
      #{bpType,jdbcType=VARCHAR}, #{isOem,jdbcType=VARCHAR}, #{oemId,jdbcType=VARCHAR}, 
      #{ownBpId,jdbcType=VARCHAR}, #{twoCode,jdbcType=VARCHAR}, #{remark,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="cn.eeepay.framework.model.BusinessProductDefine" >
    insert into business_product_define
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="bpId != null" >
        bp_id,
      </if>
      <if test="bpName != null" >
        bp_name,
      </if>
      <if test="saleStarttime != null" >
        sale_starttime,
      </if>
      <if test="saleEndtime != null" >
        sale_endtime,
      </if>
      <if test="proxy != null" >
        proxy,
      </if>
      <if test="bpType != null" >
        bp_type,
      </if>
      <if test="isOem != null" >
        is_oem,
      </if>
      <if test="oemId != null" >
        oem_id,
      </if>
      <if test="ownBpId != null" >
        own_bp_id,
      </if>
      <if test="twoCode != null" >
        two_code,
      </if>
      <if test="remark != null" >
        remark,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=BIGINT},
      </if>
      <if test="bpId != null" >
        #{bpId,jdbcType=VARCHAR},
      </if>
      <if test="bpName != null" >
        #{bpName,jdbcType=VARCHAR},
      </if>
      <if test="saleStarttime != null" >
        #{saleStarttime,jdbcType=DATE},
      </if>
      <if test="saleEndtime != null" >
        #{saleEndtime,jdbcType=DATE},
      </if>
      <if test="proxy != null" >
        #{proxy,jdbcType=VARCHAR},
      </if>
      <if test="bpType != null" >
        #{bpType,jdbcType=VARCHAR},
      </if>
      <if test="isOem != null" >
        #{isOem,jdbcType=VARCHAR},
      </if>
      <if test="oemId != null" >
        #{oemId,jdbcType=VARCHAR},
      </if>
      <if test="ownBpId != null" >
        #{ownBpId,jdbcType=VARCHAR},
      </if>
      <if test="twoCode != null" >
        #{twoCode,jdbcType=VARCHAR},
      </if>
      <if test="remark != null" >
        #{remark,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="cn.eeepay.framework.model.BusinessProductDefineExample" resultType="java.lang.Integer" >
    select count(*) from business_product_define
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update business_product_define
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.bpId != null" >
        bp_id = #{record.bpId,jdbcType=VARCHAR},
      </if>
      <if test="record.bpName != null" >
        bp_name = #{record.bpName,jdbcType=VARCHAR},
      </if>
      <if test="record.saleStarttime != null" >
        sale_starttime = #{record.saleStarttime,jdbcType=DATE},
      </if>
      <if test="record.saleEndtime != null" >
        sale_endtime = #{record.saleEndtime,jdbcType=DATE},
      </if>
      <if test="record.proxy != null" >
        proxy = #{record.proxy,jdbcType=VARCHAR},
      </if>
      <if test="record.bpType != null" >
        bp_type = #{record.bpType,jdbcType=VARCHAR},
      </if>
      <if test="record.isOem != null" >
        is_oem = #{record.isOem,jdbcType=VARCHAR},
      </if>
      <if test="record.oemId != null" >
        oem_id = #{record.oemId,jdbcType=VARCHAR},
      </if>
      <if test="record.ownBpId != null" >
        own_bp_id = #{record.ownBpId,jdbcType=VARCHAR},
      </if>
      <if test="record.twoCode != null" >
        two_code = #{record.twoCode,jdbcType=VARCHAR},
      </if>
      <if test="record.remark != null" >
        remark = #{record.remark,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update business_product_define
    set id = #{record.id,jdbcType=BIGINT},
      bp_id = #{record.bpId,jdbcType=VARCHAR},
      bp_name = #{record.bpName,jdbcType=VARCHAR},
      sale_starttime = #{record.saleStarttime,jdbcType=DATE},
      sale_endtime = #{record.saleEndtime,jdbcType=DATE},
      proxy = #{record.proxy,jdbcType=VARCHAR},
      bp_type = #{record.bpType,jdbcType=VARCHAR},
      is_oem = #{record.isOem,jdbcType=VARCHAR},
      oem_id = #{record.oemId,jdbcType=VARCHAR},
      own_bp_id = #{record.ownBpId,jdbcType=VARCHAR},
      two_code = #{record.twoCode,jdbcType=VARCHAR},
      remark = #{record.remark,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="cn.eeepay.framework.model.BusinessProductDefine" >
    update business_product_define
    <set >
      <if test="bpId != null" >
        bp_id = #{bpId,jdbcType=VARCHAR},
      </if>
      <if test="bpName != null" >
        bp_name = #{bpName,jdbcType=VARCHAR},
      </if>
      <if test="saleStarttime != null" >
        sale_starttime = #{saleStarttime,jdbcType=DATE},
      </if>
      <if test="saleEndtime != null" >
        sale_endtime = #{saleEndtime,jdbcType=DATE},
      </if>
      <if test="proxy != null" >
        proxy = #{proxy,jdbcType=VARCHAR},
      </if>
      <if test="bpType != null" >
        bp_type = #{bpType,jdbcType=VARCHAR},
      </if>
      <if test="isOem != null" >
        is_oem = #{isOem,jdbcType=VARCHAR},
      </if>
      <if test="oemId != null" >
        oem_id = #{oemId,jdbcType=VARCHAR},
      </if>
      <if test="ownBpId != null" >
        own_bp_id = #{ownBpId,jdbcType=VARCHAR},
      </if>
      <if test="twoCode != null" >
        two_code = #{twoCode,jdbcType=VARCHAR},
      </if>
      <if test="remark != null" >
        remark = #{remark,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.eeepay.framework.model.BusinessProductDefine" >
    update business_product_define
    set bp_id = #{bpId,jdbcType=VARCHAR},
      bp_name = #{bpName,jdbcType=VARCHAR},
      sale_starttime = #{saleStarttime,jdbcType=DATE},
      sale_endtime = #{saleEndtime,jdbcType=DATE},
      proxy = #{proxy,jdbcType=VARCHAR},
      bp_type = #{bpType,jdbcType=VARCHAR},
      is_oem = #{isOem,jdbcType=VARCHAR},
      oem_id = #{oemId,jdbcType=VARCHAR},
      own_bp_id = #{ownBpId,jdbcType=VARCHAR},
      two_code = #{twoCode,jdbcType=VARCHAR},
      remark = #{remark,jdbcType=VARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update> -->
</mapper>