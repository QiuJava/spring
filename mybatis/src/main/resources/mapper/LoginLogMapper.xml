<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.mapper.LoginLogMapper">
  <resultMap id="BaseResultMap" type="com.example.entity.LoginLog">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="remote_address" jdbcType="VARCHAR" property="remoteAddress" />
    <result column="employee_id" jdbcType="INTEGER" property="employeeId" />
    <result column="remark" jdbcType="VARCHAR" property="remark" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="login_status" jdbcType="VARCHAR" property="loginStatus" />
  </resultMap>
  <sql id="Base_Column_List">
    id, remote_address, employee_id, remark, create_time, login_status
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from login_log
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from login_log
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.example.entity.LoginLog">
    insert into login_log (id, remote_address, employee_id, 
      remark, create_time, login_status
      )
    values (#{id,jdbcType=INTEGER}, #{remoteAddress,jdbcType=VARCHAR}, #{employeeId,jdbcType=INTEGER}, 
      #{remark,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, #{loginStatus,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.example.entity.LoginLog">
    insert into login_log
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="remoteAddress != null">
        remote_address,
      </if>
      <if test="employeeId != null">
        employee_id,
      </if>
      <if test="remark != null">
        remark,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="loginStatus != null">
        login_status,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="remoteAddress != null">
        #{remoteAddress,jdbcType=VARCHAR},
      </if>
      <if test="employeeId != null">
        #{employeeId,jdbcType=INTEGER},
      </if>
      <if test="remark != null">
        #{remark,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="loginStatus != null">
        #{loginStatus,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.example.entity.LoginLog">
    update login_log
    <set>
      <if test="remoteAddress != null">
        remote_address = #{remoteAddress,jdbcType=VARCHAR},
      </if>
      <if test="employeeId != null">
        employee_id = #{employeeId,jdbcType=INTEGER},
      </if>
      <if test="remark != null">
        remark = #{remark,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="loginStatus != null">
        login_status = #{loginStatus,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.example.entity.LoginLog">
    update login_log
    set remote_address = #{remoteAddress,jdbcType=VARCHAR},
      employee_id = #{employeeId,jdbcType=INTEGER},
      remark = #{remark,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      login_status = #{loginStatus,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  
  <select id="getNewestCreateTimeByEmployeeId" resultType="java.util.Date">
	SELECT
		create_time 
	FROM
		login_log 
	WHERE
		employee_id = #{employeeId,jdbcType=INTEGER}
	ORDER BY
		create_time DESC 
		LIMIT 1  	
  </select>
  
</mapper>